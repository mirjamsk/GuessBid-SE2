-- MySQL Script generated by MySQL Workbench
-- 05/24/15 11:03:39
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema guessbid_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema guessbid_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `guessbid_db` DEFAULT CHARACTER SET latin1 ;
USE `guessbid_db` ;

-- -----------------------------------------------------
-- Table `guessbid_db`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `guessbid_db`.`user` ;

CREATE TABLE IF NOT EXISTS `guessbid_db`.`user` (
  `user_id` INT(11) NOT NULL AUTO_INCREMENT,
  `credit` INT(10) UNSIGNED NOT NULL DEFAULT '100',
  `email` VARCHAR(255) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `groupname` VARCHAR(45) NOT NULL DEFAULT 'USERS',
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 71
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `guessbid_db`.`bid`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `guessbid_db`.`bid` ;

CREATE TABLE IF NOT EXISTS `guessbid_db`.`bid` (
  `bid_id` INT(11) NOT NULL AUTO_INCREMENT,
  `bidder_id` INT(11) NOT NULL,
  `bid_auction_id` INT(11) NOT NULL,
  `amount` FLOAT NOT NULL,
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`bid_id`),
  INDEX `bidder_id_idx` (`bidder_id` ASC),
  INDEX `bid_auction_id_idx` (`bid_auction_id` ASC),
  CONSTRAINT `bid_auction_id`
    FOREIGN KEY (`bid_auction_id`)
    REFERENCES `guessbid_db`.`auction` (`auction_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `bidder_id`
    FOREIGN KEY (`bidder_id`)
    REFERENCES `guessbid_db`.`user` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 12
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `guessbid_db`.`auction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `guessbid_db`.`auction` ;

CREATE TABLE IF NOT EXISTS `guessbid_db`.`auction` (
  `auction_id` INT(11) NOT NULL AUTO_INCREMENT,
  `seller_id` INT(11) NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  `end_time` DATETIME NOT NULL,
  `winning_bid_id` INT(11) NULL DEFAULT NULL,
  `category` VARCHAR(45) NOT NULL DEFAULT 'Other',
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`auction_id`),
  INDEX `seller_id_idx` (`seller_id` ASC),
  INDEX `winning_bid_id_idx` (`winning_bid_id` ASC),
  CONSTRAINT `seller_id`
    FOREIGN KEY (`seller_id`)
    REFERENCES `guessbid_db`.`user` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `winning_bid_id`
    FOREIGN KEY (`winning_bid_id`)
    REFERENCES `guessbid_db`.`bid` (`bid_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 21
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `guessbid_db`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `guessbid_db`.`category` ;

CREATE TABLE IF NOT EXISTS `guessbid_db`.`category` (
  `category_id` INT(11) NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`category_id`),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 23
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `guessbid_db`.`notification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `guessbid_db`.`notification` ;

CREATE TABLE IF NOT EXISTS `guessbid_db`.`notification` (
  `notification_id` INT(11) NOT NULL AUTO_INCREMENT,
  `n_user_id` INT(11) NOT NULL,
  `n_auction_id` INT(11) NOT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  `is_outcome` TINYINT(1) NOT NULL DEFAULT '0',
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `rank` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`notification_id`),
  INDEX `n_user_id_idx` (`n_user_id` ASC),
  INDEX `n_auction_id_idx` (`n_auction_id` ASC),
  CONSTRAINT `n_auction_id`
    FOREIGN KEY (`n_auction_id`)
    REFERENCES `guessbid_db`.`auction` (`auction_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `n_user_id`
    FOREIGN KEY (`n_user_id`)
    REFERENCES `guessbid_db`.`user` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

USE `guessbid_db` ;

-- -----------------------------------------------------
-- Placeholder table for view `guessbid_db`.`active_auctions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `guessbid_db`.`active_auctions` (`auction_id` INT, `seller_id` INT, `name` INT, `description` INT, `end_time` INT, `winning_bid_id` INT, `timestamp` INT, `category` INT);

-- -----------------------------------------------------
-- Placeholder table for view `guessbid_db`.`finished_auctions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `guessbid_db`.`finished_auctions` (`auction_id` INT, `seller_id` INT, `name` INT, `description` INT, `end_time` INT, `winning_bid_id` INT, `timestamp` INT, `category` INT);

-- -----------------------------------------------------
-- Placeholder table for view `guessbid_db`.`winning_bid`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `guessbid_db`.`winning_bid` (`bid_id` INT, `bidder_id` INT, `bid_auction_id` INT, `amount` INT, `timestamp` INT);

-- -----------------------------------------------------
-- procedure get_auction_rankings
-- -----------------------------------------------------

USE `guessbid_db`;
DROP procedure IF EXISTS `guessbid_db`.`get_auction_rankings`;

DELIMITER $$
USE `guessbid_db`$$
CREATE DEFINER=`guessbid`@`%` PROCEDURE `get_auction_rankings`(IN arg_auction_id INT)
BEGIN
SELECT w.*, 1 AS rank
FROM winning_bid as w
WHERE w.bid_auction_id = arg_auction_id
UNION

SELECT * FROM 
 (SELECT  b.*, @rank:=@rank+1 AS rank
 FROM bid as b, (SELECT @rank := 1) AS r
 WHERE b.bid_auction_id = arg_auction_id and 
	b.bid_id not in (SELECT w.bid_id FROM winning_bid as w)  
    ORDER BY amount ASC) AS t;

    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_user_auction_ranking
-- -----------------------------------------------------

USE `guessbid_db`;
DROP procedure IF EXISTS `guessbid_db`.`get_user_auction_ranking`;

DELIMITER $$
USE `guessbid_db`$$
CREATE DEFINER=`guessbid`@`%` PROCEDURE `get_user_auction_ranking`(IN arg_user_id INT, IN arg_auction_id INT)
BEGIN

SELECT 1 AS rank
FROM winning_bid as w
WHERE w.bid_auction_id = arg_auction_id and w.bidder_id = arg_user_id

UNION

SELECT rank FROM 
 (SELECT  b.bidder_id, @rank:=@rank+1 AS rank
 FROM bid as b, (SELECT @rank := 1) AS r
 WHERE b.bid_auction_id =  arg_auction_id and 
	b.bid_id not in (SELECT w.bid_id FROM winning_bid as w)  
    ORDER BY amount ASC) AS br
WHERE br.bidder_id = arg_user_id
LIMIT 1;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `guessbid_db`.`active_auctions`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `guessbid_db`.`active_auctions` ;
DROP TABLE IF EXISTS `guessbid_db`.`active_auctions`;
USE `guessbid_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`guessbid`@`%` SQL SECURITY DEFINER VIEW `guessbid_db`.`active_auctions` AS select `guessbid_db`.`auction`.`auction_id` AS `auction_id`,`guessbid_db`.`auction`.`seller_id` AS `seller_id`,`guessbid_db`.`auction`.`name` AS `name`,`guessbid_db`.`auction`.`description` AS `description`,`guessbid_db`.`auction`.`end_time` AS `end_time`,`guessbid_db`.`auction`.`winning_bid_id` AS `winning_bid_id`,`guessbid_db`.`auction`.`timestamp` AS `timestamp`,`guessbid_db`.`auction`.`category` AS `category` from `guessbid_db`.`auction` where (`guessbid_db`.`auction`.`end_time` > now());

-- -----------------------------------------------------
-- View `guessbid_db`.`finished_auctions`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `guessbid_db`.`finished_auctions` ;
DROP TABLE IF EXISTS `guessbid_db`.`finished_auctions`;
USE `guessbid_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`guessbid`@`%` SQL SECURITY DEFINER VIEW `guessbid_db`.`finished_auctions` AS select `guessbid_db`.`auction`.`auction_id` AS `auction_id`,`guessbid_db`.`auction`.`seller_id` AS `seller_id`,`guessbid_db`.`auction`.`name` AS `name`,`guessbid_db`.`auction`.`description` AS `description`,`guessbid_db`.`auction`.`end_time` AS `end_time`,`guessbid_db`.`auction`.`winning_bid_id` AS `winning_bid_id`,`guessbid_db`.`auction`.`timestamp` AS `timestamp`,`guessbid_db`.`auction`.`category` AS `category` from `guessbid_db`.`auction` where (`guessbid_db`.`auction`.`end_time` <= now());

-- -----------------------------------------------------
-- View `guessbid_db`.`winning_bid`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `guessbid_db`.`winning_bid` ;
DROP TABLE IF EXISTS `guessbid_db`.`winning_bid`;
USE `guessbid_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`guessbid`@`%` SQL SECURITY DEFINER VIEW `guessbid_db`.`winning_bid` AS select `b1`.`bid_id` AS `bid_id`,`b1`.`bidder_id` AS `bidder_id`,`b1`.`bid_auction_id` AS `bid_auction_id`,`b1`.`amount` AS `amount`,`b1`.`timestamp` AS `timestamp` from `guessbid_db`.`bid` `b1` where ((`b1`.`bid_auction_id`,`b1`.`amount`) = (select `b2`.`bid_auction_id`,`b2`.`amount` from `guessbid_db`.`bid` `b2` where (`b1`.`bid_auction_id` = `b2`.`bid_auction_id`) group by `b2`.`bid_auction_id`,`b2`.`amount` having (count(0) = 1) order by `b2`.`amount` limit 1));
USE `guessbid_db`;

DELIMITER $$

USE `guessbid_db`$$
DROP TRIGGER IF EXISTS `guessbid_db`.`bid_BEFORE_INSERT` $$
USE `guessbid_db`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `guessbid_db`.`bid_BEFORE_INSERT`
BEFORE INSERT ON `guessbid_db`.`bid`
FOR EACH ROW
BEGIN
	IF new.bidder_id = (SELECT seller_id FROM auction WHERE new.bid_auction_id = auction_id)
    THEN
    signal sqlstate '45000' set message_text = 'Seller cannot bid on own auction';
      
    END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

insert into category (type) values ('Art and Antiques'), ('Electronics and Accessories'), ('Fashion'), ('Furniture'), ('Gift Cards and Coupons'), ('Health and Beauty'), ('Jewelry and Watches'), ('Literature'), ('Music and Instruments'), ('Other'), ('Real Estate'), ('Services'), ('Sporting Goods'), ('Tickets and Experiences'), ('Toys and Hobbies'), ('Video Games and Consoles');

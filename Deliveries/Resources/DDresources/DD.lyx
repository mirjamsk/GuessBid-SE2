#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 1 0 9 -1
\bullet 2 0 0 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\paragraph_spacing onehalf
POLITECNICO DI MILANO 
\begin_inset Newline newline
\end_inset

SOFTWARE ENGINEERING 2 
\begin_inset Newline linebreak
\end_inset


\begin_inset Newline newline
\end_inset

Design Document 
\begin_inset Newline linebreak
\end_inset


\end_layout

\begin_layout Date
\paragraph_spacing onehalf
Mirjam Škarica
\begin_inset Newline linebreak
\end_inset


\begin_inset Newline linebreak
\end_inset


\begin_inset Newline newline
\end_inset

Milan, May 2015
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Chapter
\paragraph_spacing onehalf
Introduction
\end_layout

\begin_layout Section
\paragraph_spacing onehalf
Purpose
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The purpose of this document is to provide a comprehensive description of
 the structure of the GuessBid system.
 It will state and analyze the design decisions made in order to satisfy
 all the requirements stated in the Requirements Analysis and Specification
 Document (RASD).
 This document is meant mainly as a guideline for developers of the software
 in question.
\end_layout

\begin_layout Section
\paragraph_spacing onehalf
Acronyms
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The following are some acronyms and their corresponding terms used throughout
 the document:
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
BCE
\series default
 Boundary-Control-Entity
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
CSS
\series default
 Cascading Style Sheets 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
DB
\series default
 Database 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
DBMS
\series default
 Database Management System 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
EIS
\series default
 Enterprise Information System 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
ER
\series default
 Entity–Relationship 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
HTML
\series default
 Hypertext Markup Language
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
HTTP
\series default
 Hypertext Transfer Protocol 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
JEE
\series default
 Java Platform Enterprise Edition 1 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
JMS
\series default
 Java Message Service 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
JSP
\series default
 JavaServer Pages 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
MCV
\series default
 Model View Controller 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
RASD
\series default
 Requirements Analysis and Specification Document 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
UML
\series default
 The Unified Modeling Language 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\series bold
UX
\series default
 User Experience
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Chapter
\paragraph_spacing onehalf
System Architecture
\end_layout

\begin_layout Section
\paragraph_spacing onehalf
JEE architecture overview
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Developing a system using Java Enterprise Edition (JEE) is one of the requiremen
ts imposed by the client.
 Having that in mind, an overview of JEE architectures is given bellow (fig
 
\begin_inset CommandInset ref
LatexCommand ref
reference "JEE_architecture"

\end_inset

).
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
JEE follows the distributed multi-tiered application approach which means
 the entire application may not reside at a single location, but is distributed.
 JEE is divided into four tiers:
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
Client
\begin_inset space ~
\end_inset

tier runs on the client machine and provides a dynamic interface to the
 middle tier, JEE server (fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "JEE_architecture"

\end_inset

) by interacting directly with users and communicating with the aforementioned
 server.
 The client tier distinguishes two types, application client and web client.
 The former being a standalone desktop application, and the latter usually
 a web browser.
 GuessBid will be implemented as a web client.
 
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
Web
\begin_inset space ~
\end_inset

tier runs on the JEE server and comprises of JavaSever Pages (JSP) and Java
 Servlets.
 The basic idea follows.
 A servlet receives an HTTP requests from the client tier and forwards the
 data to the business tier.
 After receiving a response from the business tier, dynamic web pages are
 generated using JSP and are sent back to the client.
 
\end_layout

\begin_layout Description
\paragraph_spacing single
Business
\begin_inset space ~
\end_inset

tier runs on the JEE server and contains the application's logic.
 It processes data received from the client and data retrieved from the
 database (DB) in order to send a response back to the client.
 There are three types of business components in the JEE architecture:
\end_layout

\begin_deeper
\begin_layout Description
\paragraph_spacing onehalf
Session
\begin_inset space ~
\end_inset

Beans represent a session with a client.
 Being a transient object, they lose their data when the session terminates
 
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
Java
\begin_inset space ~
\end_inset

Persistence
\begin_inset space ~
\end_inset

Entity
\begin_inset space ~
\end_inset

Beans are persistent objects and retain data even after the session.
 (e.g.
 they represent a row of data in a database table).
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
Message-Driven
\begin_inset space ~
\end_inset

Beans are used for receiving the Java Message Service (JMS) messages asynchronou
sly.
\end_layout

\end_deeper
\begin_layout Description
\paragraph_spacing onehalf
Enterprise
\begin_inset space ~
\end_inset

Information
\begin_inset space ~
\end_inset

System
\begin_inset space ~
\end_inset

(EIS)
\begin_inset space ~
\end_inset

tier runs on the Database Server and is responsible for storing and retrieving
 all persistent data.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename JEE_arch.eps
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "JEE_architecture"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\paragraph_spacing onehalf
Identifying subsystems
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
GuessBid's system is broken down into smaller subsystems by using a top
 down approach.
 This is done in order to distinguish logically separate components so their
 role in the entire system is more understandable, making their functionality
 easier to identify and implement.
 Subsystems (fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig subsystems"

\end_inset

) are derived from the functional requirements stated and described in the
 RASD document.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Subsystems.eps
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig subsystems"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Brief description of each subsystem's functionality is given below:
\end_layout

\begin_layout Description
Guest
\begin_inset space ~
\end_inset

subsystem allows clients access to the application: 
\end_layout

\begin_deeper
\begin_layout Description
Log
\begin_inset space ~
\end_inset

in allows existing users to access the application
\end_layout

\begin_layout Description
Sign
\begin_inset space ~
\end_inset

up allows new clients to register and log in
\end_layout

\end_deeper
\begin_layout Description
User
\begin_inset space ~
\end_inset

subsystem allows logged in clients (users) the full use of GuessBid's system's
 functionalities:
\end_layout

\begin_deeper
\begin_layout Description
Log
\begin_inset space ~
\end_inset

out allows logged in users to log out
\end_layout

\begin_layout Description
Browse
\begin_inset space ~
\end_inset

bids provides ability to search all active auctions
\end_layout

\begin_layout Description
Bid
\begin_inset space ~
\end_inset

management allows users to create bids and check the status of own active
 bids 
\end_layout

\begin_layout Description
Notification
\begin_inset space ~
\end_inset

management: receive notifications (rank change or auction outcome)
\end_layout

\begin_layout Description
Setting
\begin_inset space ~
\end_inset

management: allows users to change their settings, such as email or password.
 
\end_layout

\end_deeper
\begin_layout Description
Data
\begin_inset space ~
\end_inset

subsystem is the subsystem where all the persistent data is stored (like
 the bid information)
\end_layout

\begin_layout Chapter
\paragraph_spacing onehalf
Persistent data management
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
GuessBid's system's data will be stored in a relational database.
 Different diagrams of the DB schema are provided in order to identify and
 gain a deeper understanding of the system's underlying physical structure.
\end_layout

\begin_layout Section
\paragraph_spacing onehalf
Conceptual design
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Conceptual view of system's data communicates a clear picture regarding
 the entities we want to store and relationships between.
 The entity-relationship diagram, fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig er_diagram"

\end_inset

, is derived from Class diagram stated in the RASD document.
 Some minor changes in the reference to the class diagram have been introduced
 for sake of simplicity.
 They will be pointed out in the short explanation of the ER diagram bellow.
\end_layout

\begin_layout Description
Entities:
\end_layout

\begin_deeper
\begin_layout Description
\paragraph_spacing onehalf
Bid stores all information regarding a placed bid
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
User stores all information regarding a single user
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
Auction stores all information about an auction
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
Category stores all information about a category.
 Even though the class diagram shows a
\emph on
 has-a 
\emph default
relationship between 
\emph on
Auction
\emph default
 and 
\emph on
Category
\emph default
, to keep the design of the application as simple as possible, Category
 will be modeled as a separate entity to keep track of all possible types,
 but Auction will not link to it.
 Rather, it will have a field of type String denoting which type it is.
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
Notification stores all information regarding a notification.
 The class diagram suggests an inheritance relationship between 
\emph on
RankNotification
\emph default
 and 
\emph on
OutcomeNotification
\emph default
 and should therefore be modeled using a disjoint constraint (fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig er_notification"

\end_inset

).
 However, since they differ minimally, instead of the constraint, a boolean
 attribute 
\emph on
is_outcome
\emph default
 is added to the
\emph on
 Notification 
\emph default
entity in order to differentiate the two types of notifications.
\end_layout

\end_deeper
\begin_layout Description

\series bold
Relations:
\end_layout

\begin_deeper
\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\emph on
User
\begin_inset space ~
\end_inset

has
\begin_inset space ~
\end_inset

Notification 
\emph default
each user can have zero or more notifications, each notification is associated
 with exactly one user 
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\emph on
Notification
\begin_inset space ~
\end_inset

linksTo
\begin_inset space ~
\end_inset

Event
\emph default
 each notification links to exactly one auction, but each auction can produce
 zero or more notifications
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\emph on
User
\begin_inset space ~
\end_inset

creates
\begin_inset space ~
\end_inset

Auction
\emph default
 each user can create zero or more auctions, but each auction can have only
 one seller (creator)
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\emph on
User
\begin_inset space ~
\end_inset

places
\begin_inset space ~
\end_inset

Bid
\emph default
 each user can place zero or more bids, each bid is placed by(associated
 with) exactly one user
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\emph on
Bid
\begin_inset space ~
\end_inset

linksTo
\begin_inset space ~
\end_inset

Auction
\emph default
 each bid is linked to exactly one auction, a single auction can have zero
 or more bids
\end_layout

\begin_layout Labeling
\paragraph_spacing onehalf
\labelwidthstring 00.00.0000

\emph on
Bin
\begin_inset space ~
\end_inset

won
\begin_inset space ~
\end_inset

Auction
\emph default
 each auction has zero or one winning bids, each bid is a winning bid for
 zero or one auctions
\end_layout

\end_deeper
\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{2em}
\end_layout

\end_inset


\begin_inset Graphics
	filename ERdiagrams/ERnotification.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig er_notification"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1em}
\end_layout

\end_inset


\begin_inset Graphics
	filename ERdiagrams/ER.eps
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig er_diagram"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{1em}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\paragraph_spacing onehalf
Logical Design
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The logical view (fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig logical_view"

\end_inset

) of system's data is the table schema of its database.
 It is derived by translating the ER diagram by applying the following transform
ations:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Reference material::
\end_layout

\begin_layout Itemize
T.Haigh, teaching material 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.tomandmaria.com/tom/Teaching/Drexel210/translation_hints.htm
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize
Connolly, Begg, Database Systems: A Practical Approach to Design, Implementation
 and Management
\end_layout

\end_inset


\end_layout

\begin_layout Description
Entities: 
\end_layout

\begin_deeper
\begin_layout Standard
\paragraph_spacing onehalf
Each entity turns into a table 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Each attribute turns into a column in the table 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The primary key of each entity becomes the primary key of the table 
\end_layout

\end_deeper
\begin_layout Description
Relations: 
\end_layout

\begin_deeper
\begin_layout Description
\paragraph_spacing onehalf
1:N
\begin_inset space ~
\end_inset

relation: take the primary key of the relation on the “1” side and set it
 as a foreign key for the table on the “N” side
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
1:1
\begin_inset space ~
\end_inset

relation: there is a choice which table will receive the primary key of
 the other as its foreign key.
 Usually, if the dependent entity can be determined, it receives the foreign
 key
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
N:N
\begin_inset space ~
\end_inset

relation: each such relation turns into a separate table and the keys of
 the two entities are set as the primary key 
\end_layout

\end_deeper
\begin_layout Standard
\paragraph_spacing onehalf
The model obtained after this process is:
\begin_inset Foot
status open

\begin_layout Plain Layout
Primary keys are denoted by underlining the attribute name
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" islongtable="true" headBottomDL="true" longtabularalignment="center">
<column alignment="left" valignment="top" width="25col%">
<column alignment="left" valignment="top" width="65col%">
<row topspace="default" bottomspace="default" interlinespace="default" endhead="true">
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Table name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Attributes
\end_layout

\end_inset
</cell>
</row>
<row topspace="default" bottomspace="default" interlinespace="default">
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
USER 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\bar under
user_id
\bar default
, credit, email, username, password
\end_layout

\end_inset
</cell>
</row>
<row topspace="default" bottomspace="default" interlinespace="default">
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
BID
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\bar under
bid_id
\bar default
, bidder_id, auction_id, amount, timestamp
\end_layout

\end_inset
</cell>
</row>
<row topspace="default" bottomspace="default" interlinespace="default">
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
AUCTION
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\bar under
auction_id
\bar default
, seller_id, winning_bid_id, name, description, end_time, category, timestamp
\end_layout

\end_inset
</cell>
</row>
<row topspace="default" bottomspace="default" interlinespace="default">
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
NOTIFICATION
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\bar under
notification_id
\bar default
, user_id, auction_id, description, is_outcome, timestamp
\end_layout

\end_inset
</cell>
</row>
<row topspace="default" bottomspace="default" interlinespace="default">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
CATEGORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\bar under
category_id
\bar default
, type
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Also a decision was made to add the following views to the DB schema in
 order to simplify the process of querying data thus making the application
 more efficient:
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" islongtable="true" headBottomDL="true" longtabularalignment="center">
<column alignment="left" valignment="top" width="40col%">
<column alignment="left" valignment="top" width="50col%">
<row topspace="default" bottomspace="default" interlinespace="default" endhead="true">
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Virtual Table name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Attributes
\end_layout

\end_inset
</cell>
</row>
<row topspace="default" bottomspace="default" interlinespace="default">
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
ACTIVE_AUCTIONS 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\bar under
auction_id,
\bar default
 seller_id
\end_layout

\end_inset
</cell>
</row>
<row topspace="default" bottomspace="default" interlinespace="default">
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
FINISHED_AUCTIONS
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\bar under
winner_id,
\bar default
 auction_id
\end_layout

\end_inset
</cell>
</row>
<row topspace="default" bottomspace="default" interlinespace="default">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
WINNING_BID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\bar under
bid_id,
\bar default
 bidder_id, bid_auction_id
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace*{-0.7in}
\end_layout

\end_inset


\begin_inset Graphics
	filename DBschemas/LogicalView.png
	width 120text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig logical_view"

\end_inset


\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Chapter
\paragraph_spacing onehalf
Software design
\end_layout

\begin_layout Section
User experience
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Depending on design choices, every application has a unique way of interacting
 with a user.
 This section will depict graphically GuessBid's user experience (UX).
 The following stereotypes are used in all diagrams: 
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
<<screen>> represents a dynamically created page that contains all other
 elements as well as links to other pages.
 
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
<<screen
\begin_inset space ~
\end_inset

component>> represents a modular building element with a specific purpose.
 It can be attached to any part of a page, thus extending it's functionality.
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
<<input
\begin_inset space ~
\end_inset

form>> is a type of <<screen component>> containing input fields for user
 to fill out and submit it to the system for further processing.
\end_layout

\begin_layout Subsection
\paragraph_spacing onehalf
Guest Home Page
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The UX diagram in fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig ux guest home page"

\end_inset

 represents GuessBid's home page.
 The guest homepage consists of two smaller components, specifically, two
 input forms for the two different types of clients previously identified
 in the RASD document, the SignUp form for registering a new user, and the
 login form for an already registered user.
 After filling out the appropriate form, client submits it.
 If the submission was successful the client is redirected to his personal
 home page, otherwise he is redirected back to the guest home page and is
 shown an appropriate error message explaining what went wrong.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{0.3in}
\end_layout

\end_inset


\begin_inset Graphics
	filename UX/guestHomePage.eps
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig ux guest home page"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\paragraph_spacing onehalf
User Home Page
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The diagram in fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig ux user home page"

\end_inset

 represents user's personal home page (user being logged in is a given)
 from which he can access all of GuessBid's functionality like browse auctions,
 check notifications and manage settings.
 Each of these functionalities will be explained in more detail in their
 respective diagrams.
 It is important to mention that all diagrams following this one should
 contain the 
\emph on
NavigationBar
\emph default
 component, but it will be omitted to reduce clutter.
 From the 
\emph on
NavigationBar
\emph default
 user can, at any point and from any page, return to his homepage, view
 notifications, manage his settings and log out
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{0.4in}
\end_layout

\begin_layout Plain Layout


\backslash
hspace*{-1.3in}
\end_layout

\end_inset


\begin_inset Graphics
	filename UX/userHomePage.eps
	width 160text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig ux user home page"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\paragraph_spacing onehalf
User Settings
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The diagram in fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig ux user settings"

\end_inset

 represents user's settings page which consists of two main components.
 The 
\emph on
UserSettings
\emph default
 from which he can view his username, password and email, and the
\emph on
 ChangeSettings
\emph default
 component from which he can change the two latter credentials.
 In order to do so, he chooses the desired change option and in the 
\emph on
ChangeSettings
\emph default
 component a corresponding input form is loaded.
 After filling and submitting the form, an appropriate message is displayed
 in the 
\emph on
sessionMessage
\emph default
 field informing the user of a successful change or asking him to fill out
 the form again otherwise.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{0.2in}
\end_layout

\end_inset


\begin_inset Graphics
	filename UX/userSettingsPage.eps
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig ux user settings"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
\paragraph_spacing onehalf
Notifications Page
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The diagram in fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig ux notifications page"

\end_inset

 represents the 
\emph on
Notifications Page
\emph default
.
 It consists of two main components,
\emph on
 NotificationList
\emph default
 and 
\emph on
NotificationDetails
\emph default
.
 
\emph on
NotificationList
\emph default
 lists all user's notifications which can be filtered regarding their type
 (rank or outcome).
 By selecting a specific notification its details are dynamically loaded
 in the 
\emph on
NotificationDetails
\emph default
 component.
 From the details component, user can navigate to the auction the notification
 is linked to.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{0.4in}
\end_layout

\end_inset


\begin_inset Graphics
	filename UX/notificationsPage.eps
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig ux notifications page"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\paragraph_spacing onehalf
Auctions Page
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The diagram in fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig ux auctions"

\end_inset

 represents the 
\emph on
Auctions 
\emph default
component.
 It is a component of
\emph on
 UserHomePage
\emph default
 and it displays all active auctions in a list format.
 The auctions can be filtered by category, time of creation and remaining
 time.
 When clicked on a single auction, the user is redirected to 
\emph on
AuctionPage
\emph default
 containing the details of the auction in question.
 From that page user can place a bid by typing the desired amount int the
\emph on
 BidForm
\emph default
, provided he is not the seller and has sufficient funds.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename UX/viewAuctionPage.eps
	width 87text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig ux auctions"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\paragraph_spacing onehalf
Manage Auctions Page
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The diagram in fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig ux manage auctions"

\end_inset

 represents the 
\emph on
Manage Auctions Page
\emph default
.
 Itt displays all of users own auctions in a list format.When clicked on
 a single auction, the user is redirected to 
\emph on
AuctionPage
\emph default
 containing the details of the auction in question.
 If, on the other hand, user chooses 
\emph on
createNewAuction()
\emph default
 from the 
\emph on
ManageAuctionsPage
\emph default
 he is served a 
\emph on
NewAuctioPage
\emph default
 containing a form with all necessary fields.
 After user fills up the form, he submits it.
 If all information was valid he is redirected to the new auction's page,
 otherwise he is asked to fill the form again.
 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename UX/ownAuctionPage.eps
	width 90text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig ux manage auctions"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
BCE diagrams
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Another informative way to model the GuessBid's system is using the Boundary-Con
trol-Entity (BCE) Diagrams.
 This is done to further analyze the logic behind the application being
 developed.
 Quick explanation of the three main components is as follows:
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
Entity represents system's data stored in a database and it does not depend
 on the control or the boundary.
 
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
Boundary displays the entity data, and sends user actions (e.g.
 button clicks) to the control.
 In this case it represents <<screens>> or <<screen components>> explained
 in the previous chapter.
\end_layout

\begin_layout Description
\paragraph_spacing onehalf
Control provides entity data to boundary, and interprets user actions such
 as button clicks.
 It depends on the boundary and the entity.
\end_layout

\begin_layout Subsection
\paragraph_spacing onehalf
Guest Home Page
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The Guest Home Page BCE diagram in fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig bce homepage"

\end_inset

 depicts the flow of events for 
\emph on
SignUp
\emph default
 and 
\emph on
Login
\emph default
 functionalities.
 Regarding the 
\emph on
SignUp
\emph default
 fuctionality, the user enters and submits the data.

\emph on
 GuestHomePage
\emph default
 boundary validates fields have been correctly filled and passes the data
 to the 
\emph on
SignUpController
\emph default
 verifies the chosen email is unique before forwarding the registration
 request to
\emph on
 UserDataController
\emph default
.
 It creates a new user, assigns the initial credit of 100 and inserts it
 in the database after which the user is redirected to the 
\emph on
UserHomePage
\emph default
 boundary.
 On the other hand, upon 
\emph on
Login
\emph default
 form submission, 
\emph on
GuestHomePage
\emph default
 boundary first validates the entered data is in the correct format then
 the
\emph on
 LoginController
\emph default
 checks the existence of the supplied email in the system's database and
 then verifies the entered email and password match.
 If the information submitted was valid, the request is forwarded to UserDataCon
troller which loads all the necessary data needed, and serves the user his
 UserHomePage boundary.
 To load UserHomePage boundary 
\emph on
AuctionController
\emph default
 and 
\emph on
NotificationController
\emph default
 provide the newest auctions and notifications, respectively.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace*{-1.1in}
\end_layout

\end_inset


\begin_inset Graphics
	filename BCE/BCE_guestHomePage.eps
	width 150text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig bce homepage"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\paragraph_spacing onehalf
Auction and Bid management
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The following fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig bce auction bid"

\end_inset

 may seem to contain a lot of concepts at one, but taking into account that
 making a new auction, ending it, placing a bid and receiving notifications
 are all intertwined actions, a decision was made to show all of them to
 complement their collaborative nature.
 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
From the 
\emph on
AuctionList
\emph default
 boundary user can view a list of ongoing auctions and can choose to filer
 them depending on their category, time of creation, or ending time.
 The AuctionController handles the requests and servers the client an updated
 
\emph on
AuctionLis
\emph default
t boundary.Upon a click on a single auction in the listing,
\emph on
 AuctionController
\emph default
 loads the correct auction entity and serves user the 
\emph on
AuctionDetail 
\emph default
boundary containing the desired information.
 From the 
\emph on
AuctionDetail 
\emph default
boundary, user can place a bid using the 
\emph on
BidForm
\emph default
 boundary which is incorporated in the same page as the 
\emph on
AuctionDetail 
\emph default
boundary.
 When a new bid is submitted, 
\emph on
BidController
\emph default
 handles the request by first checking the user has enough credit via a
 call to 
\emph on
UserDataController
\emph default
.
 If so, the 
\emph on
BidController
\emph default
 updates the DB with the new bid.
 After a bid has successfully been places the 
\emph on
NotificationController 
\emph default
generates rank notifications informing all bidders of that particular auction
 about their possible rank change.
 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
From the 
\emph on
ManageAuctionsBoundry
\emph default
 user can choose to make a new Auction after which he is served the 
\emph on
AuctionForm
\emph default
 boundary.
 User fills out the form and requests to create an auction.
 After the boundary validates the entered data
\emph on
, AuctionController 
\emph default
creates the auction and inserts a new record of the entity in the database.
 Since every auction has a user defined time limit, after the auction has
 ended
\emph on
 AuctionController
\emph default
 is evoked.
 It delegates the job of updating seller's and the winning bidder's credit
 to
\emph on
 UserDataController
\emph default
, and the job of creating outcome notifications to the seller and to all
 bidders to
\emph on
 NotificationController.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
From the 
\emph on
NotificationList
\emph default
 boundary user can view a list of notifications and can choose to filer
 them depending on their type (outcome or rank).
 The 
\emph on
NotificationController
\emph default
 handles the request and servers the client an updated 
\emph on
NotificationList
\emph default
 boundary.
 If the user chooses to see details of a specific notification, 
\emph on
NotificationController 
\emph default
loads the correct notification entity and serves user the 
\emph on
NofiticationDetail 
\emph default
boundary containing the desired information.
 From the 
\emph on
NofiticationDetail
\emph default
 boundary, user to navigate to the auction in question.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace*{-1.3in}
\end_layout

\end_inset


\begin_inset Graphics
	filename BCE/auctionBidNotifManager.eps
	width 150text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig bce auction bid"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\paragraph_spacing onehalf
User Settings
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
5.2 User Settings Fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig bce user settings"

\end_inset

presents the BCE diagram for managing user settings.
 GuessBid's system gives users the liberty to change only their passwords
 and emails.
 The sequence of events is similar for both cases, so only the change password
 functionality will be described.
 After user navigates to the 
\emph on
ChangePasswordBoundry
\emph default
, he enters and submits the required information.
 Using client-side validation approach, the boundary itself checks if the
 entered data is in a valid format before sending the request to 
\emph on
UserDataContoller
\emph default
.
 The controller then modifies the table entry in the database for that user,
 and shows the user his
\emph on
 UserSetting 
\emph default
boundary with the changes reflected.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{0.3in}
\end_layout

\begin_layout Plain Layout


\backslash
hspace*{-0.2in}
\end_layout

\end_inset


\begin_inset Graphics
	filename BCE/BCE_userSettings.eps
	width 110text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig bce user settings"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Sequence diagrams
\end_layout

\begin_layout Subsection
User Registration
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{0.3in}
\end_layout

\begin_layout Plain Layout


\backslash
hspace*{-1.2in}
\end_layout

\end_inset


\begin_inset Graphics
	filename SequenceDiagrams/SignUp.png
	width 160text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
User Log in
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{0.3in}
\end_layout

\begin_layout Plain Layout


\backslash
hspace*{-1.2in}
\end_layout

\end_inset


\begin_inset Graphics
	filename SequenceDiagrams/LogIn.png
	width 160text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Change Email
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{0.3in}
\end_layout

\begin_layout Plain Layout


\backslash
hspace*{-1.7in}
\end_layout

\end_inset


\begin_inset Graphics
	filename SequenceDiagrams/ChangeEmail.png
	width 100page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Create Auction
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{0.3in}
\end_layout

\begin_layout Plain Layout


\backslash
hspace*{-0.8in}
\end_layout

\end_inset


\begin_inset Graphics
	filename SequenceDiagrams/CreateAuction.png
	width 140text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Place Bid
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{0.3in}
\end_layout

\begin_layout Plain Layout


\backslash
hspace*{-1.8in}
\end_layout

\end_inset


\begin_inset Graphics
	filename SequenceDiagrams/PlaceBid.png
	width 100page%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\paragraph_spacing onehalf
Tools used:
\end_layout

\begin_layout Itemize
Apache OpenOffice Draw 4.1.1 to create Entity-Relationship models
\end_layout

\begin_layout Itemize
Sketchboard.io to create User Experience and the BCE diagrams 
\end_layout

\begin_layout Itemize
MySQL Workbench to create the logical database model
\end_layout

\begin_layout Itemize
Adobe Illustrator
\end_layout

\begin_layout Itemize
Umlet for Sequence diagrams
\end_layout

\begin_layout Chapter
\paragraph_spacing onehalf
Changes made to RASD:
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
In the class diagram
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
names of 
\emph on
AuctionRankNotification
\emph default
 and 
\emph on
ActionEndNotification
\emph default
, are changed to 
\emph on
RankNotification
\emph default
 and 
\emph on
OutcomeNotification
\emph default
, respectively.
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\emph on
isRead() 
\emph default
method is removed, while fileds 
\emph on
rank, description,
\emph default
 and
\emph on
 timestamp
\emph default
 are added to 
\emph on
Notification
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\emph on
Category Class 
\emph default
was added
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
update an assumption regarding deposit of credit under section 2.7
\end_layout

\end_body
\end_document
